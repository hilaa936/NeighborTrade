// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//enums
enum Role {
  GROWER
  BUYER
  ADMIN
}
enum TradeStatus {
  PENDING
  ACCEPTED
  REJECTED
}
enum ProfileType {
  BEGIN
  MEDIUM
  PRO
}
model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  name   String?   
  email      String   @unique
  password   String?  // Set as optional for Google OAuth users
  role         String   @default("user")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  profile    Profile? // One-to-one relation to Profile
  produce          Produce[]
  tradeProposals   Trade[]   @relation("proposer")
  tradeRequests    Trade[]   @relation("receiver")

  @@map("users")
}

model Profile {
  userId         Int      @unique @id
  profilePicture String?
  type           ProfileType @default(BEGIN)
  contactInfo    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Produce {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  quantity    Int
  isDisabled  Boolean   @default(false)
  createdAt   DateTime  @default(now())

  growerId    Int
  grower      User      @relation(fields: [growerId], references: [id], onDelete: Cascade)

  tradesProposed Trade[] @relation("proposedItem")
  tradesRequested Trade[] @relation("requestedItem")
}

model Trade {
  id               Int         @id @default(autoincrement())
  status           TradeStatus @default(PENDING)
  createdAt        DateTime    @default(now())

  proposerId       Int
  proposer         User        @relation("proposer", fields: [proposerId], references: [id])

  receiverId       Int
  receiver         User        @relation("receiver", fields: [receiverId], references: [id])

  proposedItemId   Int
  proposedItem     Produce     @relation("proposedItem", fields: [proposedItemId], references: [id])

  requestedItemId  Int
  requestedItem    Produce     @relation("requestedItem", fields: [requestedItemId], references: [id])
}